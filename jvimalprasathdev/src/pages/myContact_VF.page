<apex:page controller="myContactController" id="myContact" sidebar="false">
<!---
<apex:form id="Button">
<center><apex:commandButton action="{!newContact}" value="New Contact"/>
<apex:commandButton action="{!RefereshCT}" value="Refresh"/>
</center><br/>
</apex:form>--->
<style type="text/css" title="currentStyle">

 @import "{!URLFOR($Resource.DataTables, '/DataTables-1.9.2/media/css/demo_page.css')}";
 @import "{!URLFOR($Resource.DataTables, '/DataTables-1.9.2/media/css/demo_table.css')}";
 @import "{!URLFOR($Resource.DataTables, '/DataTables-1.9.2/media/css/header.css')}";
</style>
<style type="text/css">
table.display th {
    font-size: 12px;
    border-width: 1px;
    padding: 0px;
    border-style: ridge;
    background-color: #dedecc;
}
</style>
<script src="{!URLFOR($Resource.DataTables, '/DataTables-1.9.2/media/js/jquery.js')}"></script>
<script src="{!URLFOR($Resource.DataTables, '/DataTables-1.9.2/media/js/jquery.dataTables.js')}"></script>

<script type="text/javascript" charset="utf-8">

(function($) { 
$.fn.dataTableExt.oApi.fnGetColumnData = function ( oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty ) { 
    // check that we have a column id 
    if ( typeof iColumn == "undefined" ) return new Array(); 
      
    // by default we only want unique data 
    if ( typeof bUnique == "undefined" ) bUnique = true; 
      
    // by default we do want to only look at filtered data 
    if ( typeof bFiltered == "undefined" ) bFiltered = true; 
      
    // by default we do not want to include empty values 
    if ( typeof bIgnoreEmpty == "undefined" ) bIgnoreEmpty = true; 
      
    // list of rows which we re going to loop through 
    var aiRows; 
      
    // use only filtered rows 
    if (bFiltered == true) aiRows = oSettings.aiDisplay;  
    // use all rows 
    else aiRows = oSettings.aiDisplayMaster; // all row numbers 
  
    // set up data array     
    var asResultData = new Array(); 
      
    for (var i=0,c=aiRows.length; i<c; i++) { 
        iRow = aiRows[i]; 
        var aData = this.fnGetData(iRow); 
        var sValue = aData[iColumn]; 
          
        // ignore empty values? 
        if (bIgnoreEmpty == true && sValue.length == 0) continue; 
  
        // ignore unique values? 
        else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue; 
          
        // else push the value onto the result data array 
        else asResultData.push(sValue); 
    } 
      
    return asResultData; 
}}(jQuery)); 
  
  
function fnCreateSelect( aData ) 
{ 
    var r='<select><option value=""></option>', i, iLen=aData.length; 
    for ( i=0 ; i<iLen ; i++ ) 
    { 
        r += '<option value="'+aData[i]+'">'+aData[i]+'</option>'; 
    } 
    return r+'</select>'; 
}

jQuery.fn.dataTableExt.aTypes.push(
    function ( sData ) {
        return 'html';
    }
); 
  
  // adding this for Scrolling both

$(document).ready(function() { 
    $('#slick-toggle').click(function() {
    $('#SearchFilter').toggle(400);
     return false;
     });

    /* Initialise the DataTable */ 
    var oTable = $('#ContactTable').dataTable( {
        } ); 
      
    /* Add a select menu for each TH element in the table footer */
    $("tfoot th").each( function ( i ) { 
        this.innerHTML = fnCreateSelect( oTable.fnGetColumnData(i) ); 
        $('select', this).change( function () { 
            oTable.fnFilter( $(this).val(), i ); 
        } ); 
    } ); 
} );

  
</script>

 <body>

<apex:form >
    <apex:pageBlock >
    <center><apex:commandButton action="{!newContact}" value="New Contact"/>
        <apex:commandButton action="{!RefereshCT}" value="Refresh"/>
    </center>
        <span id="slick-toggle"><a href="#">+Show/Hide Search Filters</a></span>
            <div id='SearchFilter'>
            <apex:selectList value="{!SelectedU}" size="1"><b>Select User </b>         
                <apex:selectOptions value="{!UserListGS}"/>
            </apex:selectList>
            <apex:selectList value="{!SelectedCT}" size="1"><b>Contact Type </b>
                 <apex:selectOptions value="{!ContactType}" />
            </apex:selectList>
            <apex:commandButton value="GO" action="{!goContacts}"/>        
        </div>
    </apex:pageBlock>
</apex:form> 
 
 <div id="container" Style="marging-top:20px;width:1280px;height:400px;overflow:auto;">
            
        <div id="demo" >
  
        <table cellpadding="0" cellspacing="0" border="0" class="display" id="ContactTable">
   <thead>
            
             <tr>
                 <th>Contact Name</th>
                 <th>Email</th>
                 <th>Phone</th>
                 <th>Mobile</th>  
                 <th>Contact Type</th>               
                 <th>Created Date</th>
                 
             </tr>
            </thead>
           
    <tbody>
         <apex:repeat value="{!VFContacts}" var="c">
                    <tr>
                      <a href="/{!c.con.id}"><td>{!c.con.Name}</td></a>
                      <a href="mailto:{!c.con.email}"><td>{!c.con.email}</td></a>
                      <td>{!c.con.phone}</td> 
                      <td>{!c.con.MobilePhone}</td> 
                      <td>{!c.con.Contact_Type__c}</td>
                      <td>{!c.createddate}</td>                      
                  </tr>
                 </apex:repeat>
    </tbody>             
    <tfoot>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            
        </tr>
    </tfoot>
    </table>
   </div>
        

</div>
</body>
</apex:page>